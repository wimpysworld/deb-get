name: 01-main Tests

on:
  pull_request:
    types: [opened, synchronize]
    paths:
      - "01-main/packages/*"
      - "01-main/manifest"
      - "01-main/*.md"
      - "!01-main/packages/*.html"
      - "!01-main/packages/*.json"
      - "!01-main/packages/timestamp"
      # if we exclude docs and they are changed, the workflow will not run so the merge will not be allowed
      # - "!01-main/packages/*.md"

  workflow_dispatch:

jobs:
  tests:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: tj-actions/changed-files@v46
        id: changed-md-files
        with:
          files: '**/*.md'
          separator: ","
      - uses: DavidAnson/markdownlint-cli2-action@v19
        if: steps.changed-md-files.outputs.any_changed == 'true'
        with:
          globs: ${{ steps.changed-files.outputs.all_changed_files }}
          separator: ","
          config: .markdownlint.yml
          # fail_on_error: false
          # fail_on_warning: false
          # fail_on_info: false
          # fail_on_nothing: false


      - name: Install dependencies
        run: |
          sudo apt-get update

          # Dependencies for deb-get itself
          sudo apt-get install apt apt-transport-https bash coreutils curl dpkg gpg grep libc-bin lsb-release sed software-properties-common sudo wget desktop-file-utils -y

      - name: Initialize /etc/deb-get
        run: |
          sudo mkdir /etc/deb-get
          echo "deb-get 1 github" | sudo tee /etc/deb-get/installed > /dev/null
          sudo cp ./01-main/manifest /etc/deb-get/01-main.repo
          sudo cp -r ./01-main/packages /etc/deb-get/01-main.d
          sudo gpg -k > /dev/null

      # Install added/changed packages to see if they install properly and are detected as such
      - name: Test package installations
        run: |
          chmod a+x ./deb-get
          export DEBIAN_FRONTEND=noninteractive
          export DEBGET_TOKEN=${{ secrets.GITHUB_TOKEN }}
          set -x
          APPS="$(git diff --name-only --diff-filter=ACMRT ${{ github.event.pull_request.base.sha }} ${{ github.sha }} | grep "^01-main/packages/" | sed "s|^01-main/packages/||")"
          SUPPORTED="$(./deb-get list --raw)"
          for APP in ${APPS}; do
            if echo "${SUPPORTED}" | grep -q -m 1 "^${APP}$"; then
              ./deb-get install "${APP}"
              if ./deb-get show "${APP}" | grep -q "Installed:	No"; then
                echo "Failed to detect ${APP} as installed" >&2
                exit 1
              else
                ./deb-get purge "${APP}"
              fi
            fi
          done

      #   # report changed to markdown files and optionally lint them
      # - name: Report changed Markdown files
      #   with: 
      #       globs: |
      #       *.md
      #       !test/*.md
      #       01-main/*.md
      #   run: |
      #     set -x
      #     CHANGED="$(git diff --name-only --diff-filter=ACMRT ${{ github.event.pull_request.base.sha }} ${{ github.sha }} | grep "^01-main/.*\.md$")"
      #     if [ -n "${CHANGED}" ]; then
      #       echo "Changed Markdown files:"
      #       echo "${CHANGED}"
      #     else
      #       echo "No changed Markdown files"
      #     fi
      #     if [ -n "${CHANGED}" ]; then
      #       # mardownlint must be installed
      #       # sudo apt-get install markdownlint -y
      #       # or use npm
      #       sudo npm install -g markdownlint-cli2

      #       for FILE in ${CHANGED}; do
      #         echo "Linting ${FILE}"
      #       # markdownlint the file and preserve assets but prevent the workflow from failing
      #         markdownlint-cli2 --ignore-front-matter --disable MD013,MD033,MD041,MD024,MD025,MD034,MD036,MD037,MD038,MD039,MD041,MD042,MD043,MD044,MD046 "${FILE}" || true
      #       done
      #     fi
        