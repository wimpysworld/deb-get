.\" Automatically generated by Pandoc 3.1.9
.\"
.TH "deb-get" "1" "February 14, 2022" "deb-get" "deb-get User Manual"
.SH NAME
deb-get - An installation manager for 3rd-Party deb packages
.SH SYNOPSIS
\f[B]deb-get\f[R] [\f[I]COMMAND\f[R]]\&...
.IP
.EX
deb-get {update [--repos-only] [--quiet] | upgrade | show <pkg list> | install <pkg list>
        | reinstall <pkg list> | remove [--remove-repo] <pkg list>
        | purge [--remove-repo] <pkg list>
        | search [--include-unsupported] <regex> | cache | clean
        | list [--include-unsupported] [--raw|--installed|--not-installed]
        | prettylist [<repo>] | csvlist [<repo>] | fix-installed [--old-apps]
        | help | version}
.EE
.SH DESCRIPTION
deb-get provides a high-level commandline interface for the package
management system to easily install and update packages published in 3rd
party apt repositories or via direct download.
.SH COMMANDS
.TP
\f[B]update\f[R]
update is used to resynchronize the package index files from their
sources.
When \[en]repos-only is provided, only initialize and update
deb-get\[cq]s external repositories, without updating apt or looking for
updates of installed packages.
.TP
\f[B]upgrade\f[R]
upgrade is used to install the newest versions of all packages currently
installed on the system.
.TP
\f[B]install\f[R]
install is followed by one package (or a space-separated list of
packages) desired for installation or upgrading.
.TP
\f[B]reinstall\f[R]
reinstall is followed by one package (or a space-separated list of
packages) desired for reinstallation.
.TP
\f[B]remove\f[R]
remove is identical to install except that packages are removed instead
of installed.
When \[en]remove-repo is provided, also remove the apt repository of
apt/ppa packages.
.TP
\f[B]purge\f[R]
purge is identical to remove except that packages are removed and purged
(any configuration files are deleted too).
When \[en]remove-repo is provided, also remove the apt repository of
apt/ppa packages.
.TP
\f[B]clean\f[R]
clean clears out the local repository (/var/cache/deb-get) of retrieved
package files.
.TP
\f[B]search\f[R]
search for the given regex(7) term(s) from the list of available
packages supported by deb-get and display matches.
When \[en]include-unsupported is provided, include packages with
unsupported architecture or upstream codename and include PPAs for
Debian-derived distributions.
.TP
\f[B]show\f[R]
show information about the given package (or a space-separated list of
packages) including their install source and update mechanism.
.TP
\f[B]list\f[R]
list the packages available via deb-get.
When no option is provided, list all supported packages and tell which
ones are installed (slower).
When \[en]include-unsupported is provided, include packages with
unsupported architecture or upstream codename and include PPAs for
Debian-derived distributions (faster).
When \[en]raw is provided, list all packages and do not tell which ones
are installed (faster).
When \[en]installed is provided, only list the packages installed
(faster).
When \[en]not-installed is provided, only list the packages not
installed (faster).
.TP
\f[B]prettylist\f[R]
markdown formatted list the packages available in repo.
repo defaults to 01-main.
If repo is 00-builtin or 01-main the packages from 00-builtin are
included.
Use this to update README.md.
.TP
\f[B]csvlist\f[R]
csv formatted list the packages available in repo.
repo defaults to 01-main.
If repo is 00-builtin or 01-main the packages from 00-builtin are
included.
Use this with 3rd party wrappers.
.TP
\f[B]cache\f[R]
list the contents of the deb-get cache (/var/cache/deb-get).
.TP
\f[B]fix-installed\f[R]
fix installed packages whose definitions were changed.
When \[en]old-apps is provided, transition packages to new format.
This command is only intended for internal use.
.TP
\f[B]help\f[R]
show this help.
.TP
\f[B]version\f[R]
show deb-get version.
.SH EXAMPLES
.SS Introduction
\f[CR]deb-get\f[R] makes it easy to install and update \f[CR].debs\f[R]
published in 3rd party apt repositories or made available via direct
download on websites or GitHub release pages.
.SS Install
Use \f[CR]deb-get\f[R] to install \f[CR]deb-get\f[R].
.IP
.EX
sudo apt install curl
curl -sL https://raw.githubusercontent.com/wimpysworld/deb-get/main/deb-get | sudo -E bash -s install deb-get
.EE
.PP
Alternatively, you can \c
.UR https://github.com/wimpysworld/deb-get/releases/latest
download the \f[CR].deb\f[R] of \f[CR]deb-get\f[R] from the releases
page
.UE \c
\ and install it manually with
.IP
.EX
sudo apt-get install ./path/to/deb-get_<version>.deb
.EE
.SS Usage
Here\[cq]s an example of how to install Google Chrome.
.IP
.EX
deb-get install google-chrome-stable
.EE
.PP
You can see what applications are supported by using
\f[CR]deb-get list\f[R] or you can search the available applications
with \f[CR]deb-get search <app>\f[R].
.PP
You can upgrade packages installed using \f[CR]deb-get\f[R] by running
\f[CR]deb-get upgrade\f[R].
.SS Why?
3rd party apt repositories exist.
They are not going away.
.PP
Some application vendors and projects express their support for
Debian/Ubuntu by publishing \f[CR].debs\f[R] of their software as direct
downloads or via their own apt repositories.
\f[CR]deb-get\f[R] makes it easy to find, install and update
\f[CR].debs\f[R] published in this way.
.IP \[bu] 2
Perhaps you want to use software that is not (yet) officially packaged
for Debian/Ubuntu.
.IP \[bu] 2
Perhaps you want to use software that is fast moving and newer versions
are available from the vendor/project.
.IP \[bu] 2
Perhaps you want to use some non-free software that Debian/Ubuntu cannot
distribute due to licensing restrictions.
.PP
\f[CR]deb-get\f[R] tries to remedy this by providing a curated index of
software available for Ubuntu that is published by the project or
vendor.
\f[CR]deb-get\f[R] is inspired by Software Boutique, a graphical
application I co-authored that does much the same thing and has been
included in \c
.UR https://ubuntu-mate.org
Ubuntu MATE
.UE \c
\ since 2015.
.SS Supported Software
The list of the software that can be installed, updated and removed
using \f[CR]deb-get\f[R]\[cq]s main repository is available at \c
.UR https://github.com/wimpysworld/deb-get/blob/main/01-main/README.md
01-main/README
.UE \c
\&.
.SS How do package updates work?
.SS 3rd party apt repositories and PPAs
If packages are available via a 3rd party \f[CR]apt\f[R] repository or a
Launchpad PPA, then those packages will be updated/upgraded when using
\f[CR]sudo apt-get update\f[R] and \f[CR]sudo apt-get upgrade\f[R].
.SS GitHub Releases and direct downloads
For \f[CR].deb\f[R] packages that are only available via GitHub Releases
or direct download, then those packages can only be updated/upgraded by
using \f[CR]deb-get update\f[R] and \f[CR]deb-get upgrade\f[R].
.SS GitHub API Rate Limits
\f[CR]deb-get\f[R] uses the \c
.UR https://docs.github.com/en/rest
GitHub REST API
.UE \c
\ for some functionality when applications are provided via GitHub
Releases and for unauthenticated interactions this API is \c
.UR
https://docs.github.com/en/rest/overview/resources-in-the-rest-api#rate-limiting
rate-limited
.UE \c
\ to 60 calls per hour per source (IP Address).
This is vital for keeping the API responsive and available to all users,
but can be inconvenient if you have a lot of GitHub releases being
handled by \f[CR]deb-get\f[R] (or need to update several times in a
short period to test your \c
.UR
https://github.com/wimpysworld/deb-get/blob/main/01-main/CONTRIBUTING.md
contribution
.UE \c
) and will result in, for example, temporary failures to be able to
upgrade or install applications via GitHub Releases.
.PP
If you have a GitHub account you can authenticate your GitHub API usage
to increase your rate-limit to 5000 requests per hour per authenticated
user.
To do this you will need to use a \c
.UR
https://docs.github.com/en/authentication/keeping-your-account-and-data-secure/creating-a-personal-access-token
Personal Access Token (PAT)
.UE \c
\&.
Once you have created a token within GitHub (or identified an
appropriate existing token) you should insert it into an environment
variable (\f[CR]DEBGET_TOKEN\f[R]) for \f[CR]deb-get\f[R] to pick up and
use to authenticate to the GitHub API.
.PP
e.g.:
.IP
.EX
export DEBGET_TOKEN=<my-secret-token>
deb-get update
deb-get upgrade
.EE
.SS Adding Software
For information on what is acceptable as suggestion for new packages and
instructions on how to open a PR to add a new package to the main
repository, head to \c
.UR
https://github.com/wimpysworld/deb-get/blob/main/01-main/CONTRIBUTING.md
01-main/CONTRIBUTING
.UE \c
\&.
.SS Adding external repositories
It is possible to also add a \f[CR]deb-get\f[R]-compatible external
repository, and supplement the list of supported packages, typically
because you need to:
.IP "1." 3
Add something which does not meet any of the general guidelines of the
main repository; or
.IP "2." 3
Change the definition of a package from the main repository.
.PP
For information on how to create and maintain a
\f[CR]deb-get\f[R]-compatible external repository, head to \c
.UR https://github.com/wimpysworld/deb-get/blob/main/EXTREPO.md
EXTREPO
.UE \c
\&.
.PP
How to use:
.IP \[bu] 2
Manually create the file \f[CR]/etc/deb-get/<priority>-<repo>.repo\f[R],
containing in its first line the base URL of the repository.
.RS 2
.IP \[bu] 2
The \f[CR]<priority>\f[R] value is a two-digit number between 00 and 99
that defines the order in which the repositories will be loaded (00
first, 99 last), so if any conflicting definitions are found, the one
from the repository with the highest priority will be used (the builtin
definitions from the \f[CR]deb-get\f[R] script itself have priority 00,
the main repository has priority 01 and the custom user includes have
priority 99).
.IP \[bu] 2
The \f[CR]<repo>\f[R] value can be anything, but it should preferably be
unique and easy to remember.
.RE
.IP \[bu] 2
Run \f[CR]deb-get update\f[R], so the manifest file and the package
definition files are downloaded.
.SS Custom User Includes
As a more advanced feature, it is possible to also add your own local
customizations or overrides, and supplement the list of packages
supported by the main repository.
This feature is especially useful so that your local copy of the main
repository can remain unmodified and always be kept fully up to date by
moving your customizations out in a seperate folder away from the main
repository.
.PP
Typically because:
.IP "1." 3
You are waiting on a pending request for a new software package, which
has been submitted for consideration but has not been reviewed /
accepted / merged / released yet; or
.IP "2." 3
You need to add something which does not meet any of the general
guidelines of the main repository, for whatever various reason(s).
.PP
How to use:
.IP \[bu] 2
Manually create the folder \f[CR]/etc/deb-get/99-local.d/\f[R] if it
does not exist already.
By default, \f[CR]deb-get\f[R] does not create this folder unless your
specific distribution has packaged it that way.
.IP \[bu] 2
Any files directly within this folder will be bash sourced
e.g.\ \f[CR]. /etc/deb-get/99-local.d/appname1\f[R].
.IP \[bu] 2
The name of the added file \f[B]must\f[R] match \f[B]exactly\f[R] the
name of the package being defined.
.IP \[bu] 2
For information on how to create a package definition file, head to \c
.UR
https://github.com/wimpysworld/deb-get/blob/main/EXTREPO.md#the-package-definition-files
EXTREPO
.UE \c
\&.
.IP \[bu] 2
Your user custom package definition files are then loaded after the
package definitions from any added repository.
.IP \[bu] 2
A recommendation message is printed for any new user added definitions,
with a URL link to open a request.
.IP \[bu] 2
Warning messages are then also printed for any conflicts detected for
overriden definitions (of same name), which then take priority over
existing ones.
.PP
For the last situation, this is most often meant as a helpful reminder
to remove your custom definition once it has been successfully merged
upstream into the main repository, so after the main repository updates
itself you are properly notified.
It also avoids keeping lots of duplicate definitions around.
.PP
We really hope that you will enjoy the convenience and flexibility of
the user overrides feature, so please consider in return to open new
issues and pull requests, for any new package definitions you create, so
that we can share those back with the wider community.
Many thanks for your consideration!
.SS Related projects
.IP \[bu] 2
\c
.UR https://app-outlet.github.io/
App Outlet
.UE \c
: \f[I]A Universal linux app store\f[R]
.IP \[bu] 2
\c
.UR https://github.com/OhMyMndy/bin-get
bin-get
.UE \c
: \f[I]Script to easily and safely fetch binaries from Github
Releases/tags\f[R]
.IP \[bu] 2
\c
.UR https://www.makedeb.org/
makedeb
.UE \c
: \f[I]A simplicity-focused packaging tool for Debian archives\f[R]
.IP \[bu] 2
\c
.UR https://www.danieltufvesson.com/makeresolvedeb
MakeResolveDeb
.UE \c
: \f[I]Install DaVinci Resolve or DaVinci Resolve Studio on Debian\f[R]
.IP \[bu] 2
\c
.UR https://pacstall.dev/
pacstall
.UE \c
: \f[I]The AUR alternative for Ubuntu\f[R]
.IP \[bu] 2
\c
.UR https://github.com/ubuntu/ubuntu-make
Ubuntu Make
.UE \c
: \f[I]Easy setup of common tools for developers on Ubuntu.\f[R]
.IP \[bu] 2
\c
.UR https://github.com/popey/unsnap
unsnap
.UE \c
: \f[I]Quickly migrate from using snap packages to flatpaks\f[R] ## In
the media
.IP \[bu] 2
\c
.UR
https://www.gamingonlinux.com/2022/05/the-deb-get-tool-helps-ubuntu-and-derivative-distro-fans-grab-extra-apps/
The deb-get tool helps Ubuntu (and derivative distro) fans grab extra
apps
.UE \c
\ - \f[B]GamingOnLinux\f[R]
.IP \[bu] 2
\c
.UR
https://www.omgubuntu.co.uk/2022/05/use-deb-get-to-install-popular-linux-apps-on-ubuntu
Deb-Get is `Apt-Get' for 3rd-Party Ubuntu Software
.UE \c
\ - \f[B]omg!
ubuntu!\f[R]
.IP \[bu] 2
\c
.UR
https://www.tomshardware.com/uk/how-to/install-linux-apps-with-deb-get
How To Install Third-Party Linux Applications with Deb-Get
.UE \c
\ - \f[B]toms HARDWARE\f[R]
.IP \[bu] 2
\c
.UR
https://www.techrepublic.com/article/use-deb-get-install-third-party-software-ubuntu/
How to use deb-get to install third-party software on Ubuntu
.UE \c
\ - \f[B]TechRepublic\f[R]
.IP \[bu] 2
\c
.UR https://news.itsfoss.com/deb-get-ubuntu/
Ubuntu MATE\[cq]s Lead Creates a Nifty Tool to Help Install 3rd Party
Deb Packages
.UE \c
\ - \f[B]It\[cq]s FOSS\f[R]
.IP \[bu] 2
\c
.UR https://fosspost.org/deb-get-install-3rd-party-software-ubuntu/
Easily Get 3rd-Party Software on Ubuntu With Deb-Get
.UE \c
\ - \f[B]FOSS Post\f[R]
.IP \[bu] 2
\c
.UR
https://ubunlog.com/en/deb-get-un-apt-get-para-instalar-software-de-terceros-en-ubuntu/
deb-get, an \[lq]apt-get\[rq] to install third-party software on Ubuntu
.UE \c
\ - \f[B]ubunlog\f[R]
.IP \[bu] 2
\c
.UR
https://www.linuxadictos.com/en/deb-get-una-utilidad-para-instalar-software-de-terceros.html
deb-get, a utility for installing third-party software
.UE \c
\ - \f[B]Linux Addicted\f[R]
.SH BUGS
Submit bug reports online at: \c
.UR https://github.com/wimpysworld/deb-get/issues
.UE \c
.SH SEE ALSO
Full sources at: \c
.UR https://github.com/wimpysworld/deb-get
.UE \c
.PP
deborah(1)
.SH AUTHORS
Martin Wimpress.
